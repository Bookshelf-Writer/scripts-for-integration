name: Example Build
# При интеграции должны быть права на запись у actions

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    name: "Build ${{ github.ref }}"

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0


      ########################################################################################################################

      - name: Load Info from Build
        run: |
          nameBuild=$(./_run/scripts/sys.sh -n)
          versionBuild=$(./_run/scripts/sys.sh -v)

          echo "BUILD_NAME=$nameBuild" >> $GITHUB_ENV
          echo "BUILD_VER=$versionBuild" >> $GITHUB_ENV
          
          echo "NAME: $nameBuild"
          echo "VER: $versionBuild"

      - name: Check Tag
        run: |
          if [[ "${{ github.event.release.tag_name }}" != "${{ env.BUILD_VER }}" ]]; then
            curl -X DELETE -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/${{ github.event.release.id }}"
            
            echo "::error ::Incorrect release tag. Should match the [${{ env.BUILD_VER }}]."
            exit 1
          fi

      ########################################################################################################################

      # пример пользовательского функционала
      - name: Upload [README]
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: README.md
          asset_name: "${{ env.BUILD_NAME }}.${{ env.BUILD_VER }}.README.md"
          asset_content_type: application/octet-stream

      ########################################################################################################################

      - name: Checkout to the [master]
        run: |
          if git branch -a | grep -qw "origin/master"; then
            git checkout master
          else
            echo "No known branch found!"
            exit 1
          fi

      - name: Push new version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          new_version=$(./_run/scripts/sys.sh --increment --minor)
          
          git add ./_run/values/ver.txt
          
          git commit -m "actions [$new_version] "$'\n'"Build: [${{ env.BUILD_VER }}] >> [$new_version]"
          git push origin HEAD:master
